#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+OPTIONS: author:t broken-links:nil c:nil creator:nil
#+OPTIONS: d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:t
#+OPTIONS: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+OPTIONS: timestamp:t title:t toc:t todo:t |:t
#+TITLE: Mnas-Git
#+DATE: <2019-03-30 Сб>
#+AUTHOR: Nick Matvyeyev
#+EMAIL: mnasoft@gmail.com
#+LANGUAGE: ru
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 26.1 (Org mode 9.1.9)

Mnas-Git. Проект предназначен для безсетевого способа синхронизации проектов Common Lisp между различными персональными компьютерами.

* Файлы проекта

#+BEGIN_SRC shell :exports results
for i in `ls ./*.lisp`
do
echo "[[${i}]]"
done 
#+END_SRC

#+RESULTS:
| [[file:./mnas-git.lisp]]      |
| [[file:./mnas-git-test.lisp]] |
| [[file:./mnas-git-vars.lisp]] |
| [[file:./package.lisp]]       |

* Экспортируемые функции проекта Mnas-Git

#+name: function-doc
#+BEGIN_SRC lisp :exports results
    (labels (( str-or-not (x) (if (stringp x) x "-")))
      (mapcar
       #'(lambda (el)
	   (list el (mnas-string:string-replace-all
		     (str-or-not (documentation el 'function)) (format nil "~%") "; ")))
       '(mgit:clone--bare
	 mgit:clone--origin
	 mgit:command mgit:commit-a
	 mgit:help
	 mgit:init mgit:man
	 mgit:remote-readd
	 mgit:sh-command
	 mgit:dialog-remote-readd)))
#+END_SRC

#+RESULTS: function-doc
| MNAS-GIT:CLONE--BARE         | Для каждого репозитория, расположенного в каталоге *clisp-dir-win* текущей ; машины *m-i*, создает список команд, который выполняет клонирование чистого ; репозитория в каталог (concatenate 'string *git-bare-dir* "git-" *m-i*); ; После создания таким образом каталога с чистыми репозиториями его можно; перенести на другую машину для выполнения слияния.; ;    Если опциональный параметр os имеет значение nil,; вывод функции направляется на стандартный вывод при этом функция возврвщает t,; иначе -- вывод направляется в командный файл и затем этот выполняется при этом ; функция возврвшает путь к командному файлу и результат выполнения командного файла;;   Пример использования:; ;;;;(clone--bare); ;;;;(clone--bare t);   Рекоемндации:;   Перед выполнением даной функции следует удалить соответствующий ; каталог:  (concatenate 'string *git-bare-dir* "git-" *m-i*),; содержащий чистые репозитории; |
| MNAS-GIT:CLONE--ORIGIN       | Генерирует сценарий, который выполяет клонирование чистых из репозиториев, для которых ; в каталоге с проектами не нашлось соответствующего проекта,; во виз расположения origin ; ;;;;(clone--origin "mnasoft|
| MNAS-GIT:COMMAND             | Для каждого репозитория, расположенного в каталоге *clisp-dir-win* текущей ; машины *m-i*, генерирует сценарий, выполняющий команду git-command.; ;    Если опциональный параметр os имеет значение nil,; вывод функции направляется на стандартный вывод при этом функция возврвщает t,; иначе -- вывод направляется в командный файл и затем этот выполняется при этом ; функция возврвшает путь к командному файлу и результат выполнения командного файла.; ; Пример использования:; ;;;;(command  "git remote remove other"); ;;;;(command  "git remote remove other" t);                                                                                                                                                                                                                                                                                                                                                      |
| MNAS-GIT:COMMIT-A            | Для каждого репозитория, расположенного в каталоге *clisp-dir-win* ; текущей машины *m-i*, генерирует сценарий, выполняющий команду git commit -a.; ; В качестве комментария используется строка предтвляющая,; значение текущей даты и времени.; ; Примеры использования:; ; @begin[lang=lisp](code);  (commit-a); @end(code); ; @begin[lang=lisp](code);  (commit-a t); @end(code); ; @begin[path=sin-cos.png](gnuplot); @begin(verb); plot sin(x), cos(x); @end(verb); @end(gnuplot); ;                                                                                                                                                                                                                                                                                                                                                                                                                                          |
| MNAS-GIT:HELP                | Формирует подсказку с вариантами использования|
| MNAS-GIT:INIT                | Генерирует bash-сценарий, инициализирующий git репозитории.; ; Примеры использования:;  @begin[lang=lisp](code);   (init); ;   (init t);  @end(code|
| MNAS-GIT:MAN                 | Формирует строку, содержащую подсказку|
| MNAS-GIT:REMOTE-READD        | Для каждого репозитория расположенного в каталоге *clisp-dir-win* создает список команд, который выполняет:; @begin(list); @item(отсоединение от внешних репозиториев (список *m-l*), которые для данной машины *m-i* вожможно имеют неправильное расположение;); @item(присоединение к внешним репозиториям (список *m-l*), которые для данной машины *m-i* должны иметь правильное расположение;); @end(list);    Если опциональный параметр os имеет значение nil,; вывод функции направляется на стандартный вывод при этом функция возврвщает t,; иначе - вывод направляется в командный файл и затем этот выполняется при этом ; функция возврвшает путь к командному файлу и результат выполнения командного файла.; ;    Пример использования:;  @begin[lang=lisp](code);  (prong;   (remote-readd);   (remote-readd t));  @end(code); ;    Рекомендации:; ;    Следует выполнять данную функцию ...;                       |
| MNAS-GIT:SH-COMMAND          | Позволяет выполнить команды|
| MNAS-GIT:DIALOG-REMOTE-READD | Выполняет диалог для указания каталога, в котором находится репозиторий git, ; для пересоздания удаленных репозиториев. ; ; Пример использования:;  @begin[lang=lisp](code);   (dialog-remote-readd);  @end(code|

* Генерирование документации 

#+BEGIN_SRC lisp
 (codex:document :mnas-git)
#+END_SRC

#+RESULTS:
: NIL

* Примеры использования git                    
** Экспорт изменений в удаленные калалоги      
 #+BEGIN_SRC shell
 for i in cl.net github.com gitlab.com ; do git push $i master; done
 #+END_SRC
 
** Set UTF-8 display for Git GUI differences window

 #+BEGIN_SRC shell
 # Global setting for all you repositories
 git config --global gui.encoding utf-8

 # For one repository only
 git config gui.encoding utf-8
 #+END_SRC

** How to colorize output of git
 #+BEGIN_SRC shell
   git config --global color.ui auto
   git config --global color.branch auto
   git config --global color.status auto
 #+END_SRC


** Install Bash git completion
#+BEGIN_SRC shell
  pacman -S git bash-completion
#+END_SRC

** Typcal .gitignore file
#+BEGIN_SRC shell
  touch .gitignore 
  echo '.directory' >>.gitignore
  echo '*~' >>.gitignore
  echo '*.FASL' >>.gitignore
  echo '*.fasl' >>.gitignore
  echo '*.lisp-temp' >>.gitignore
#+END_SRC


** Typcal .gitattributes file
#+BEGIN_SRC shell
  touch .gitattributes 
  echo '# Set the default behavior, in case people don't have core.autocrlf set' >>.gitignore
  echo '* text=auto' >>.gitignore
  echo '' >>.gitignore
  echo '# Denote all files that are truly binary and should not be modified' >>.gitignore
  echo '*.png binary' >>.gitignore
  echo '*.jpg binary' >>.gitignore
  echo '*.bmp binary' >>.gitignore
  echo '' >>.gitignore
  echo '# Explicitly declare text files you want to always be normalized and converted to native line endings on checkout' >>.gitignore
  echo '*.c* text' >>.gitignore
  echo '*.h* text' >>.gitignore
  echo '' >>.gitignore
  echo '# Declare files that will always have CRLF line endings on checkout' >>.gitignore
  echo '*.sln text eol=crlf' >>.gitignore
  echo '*.txt text eol=crlf' >>.gitignore
  echo '*.md  text eol=crlf' >>.gitignore
  echo '' >>.gitignore
  echo '# Declare files that will always have LF line endings on checkout' >>.gitignore
  echo '# Common Lisp.' >>.gitignore
  echo '*.lisp text eol=lf' >>.gitignore
  echo '*.asd text eol=lf' >>.gitignore
  echo '' >>.gitignore
  echo '# HTML' >>.gitignore
  echo '*.html text eol=lf' >>.gitignore
  echo '' >>.gitignore
  echo '# AutoCad files' >>.gitignore
  echo '# Binary' >>.gitignore
  echo '*.cuix  binary' >>.gitignore
  echo '*.mnr  binary' >>.gitignore
  echo '# CRLF' >>.gitignore
  echo '*.lsp text eol=crlf' >>.gitignore
  echo '*.mnl  text eol=crlf' >>.gitignore
#+END_SRC

* Что сделать
* BASH pull

#+BEGIN_SRC sh
cd /home/namatv/quicklisp/local-projects
COMP="KO11-118383";
CDIR=`pwd`; for i in `find . -name ".git"`
do 
  cd $CDIR/$i
  cd ../
  git pull ${COMP} master
done
#+END_SRC

#+RESULTS:
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |
| Уже | обновлено. |

* Настройка удаленного πι репозитория
#+BEGIN_SRC shell
cd;
for i in `find /home/namatv/quicklisp/local-projects/ . -name ".git"`
do 
cd $i/..;
echo $PWD; 
git remote remove pi; 
git remote add pi git@141.101.26.243:/opt/git/`basename $PWD`.git; 
done
#+END_SRC

